#include<iostream>
using namespace std;

class Complex {
    float x;
    float y;

public:
   
	   friend istream &operator>>(istream &, Complex &);
       friend ostream &operator<<(ostream &,Complex &);
         Complex operator+(Complex &obj) {
        Complex temp;
        temp.x = x + obj.x;
        temp.y = y + obj.y;
        return temp;
        
    }
  Complex operator*(const Complex& obj) {
    Complex temp;
    temp.x = (x * obj.x) - (y * obj.y);
    temp.y = (x * obj.y) + (y * obj.x);
    return temp;
}
   
};
 	istream &operator>>(istream & in,Complex & obj)
{ 
	cout<<"enter real number: ";
	in>>obj.x;
	cout<<"enter imaginary number: ";
	in>>obj.y;
	return in;
}
	ostream &operator<<(ostream &out,Complex &obj)
	{
		out<<obj.x<<"+";
		out<<obj.y<<"i";
		return out;
	}

int main() {
    Complex c1,c2,c3,c4;
	cin>>c1;
	cin>>c2;
	c3=c1+c2;
	cout<<c3<<endl;
    c4=c1*c2;
    cout<<c4;
      
    return 0;
}
